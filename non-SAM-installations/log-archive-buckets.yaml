AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Creates the buckets in the Log Archive account for storing log files
  for Elastic Load Balancing and CloudFront.

Parameters:

  OrgId:
    Type: String
    Description: The organisation ID of the AWS Organization
    Default: "o-0o8kgujnes"

  SourceAccountRoleName:
    Type: String
    Description: The name of the role in the source accounts allowed to perform
      the replication operations.
    Default: 's3-log-replication-source-account-role'

Resources:

  ########################################################################
  # Load Balancer logs
  ########################################################################

  LoadBalancerBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      BucketName: !Sub 'load-balancer-logs-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref LoadBalancerAccessBucket
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationAndGlacierRule
            Status: Enabled
            ExpirationInDays: 3650
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
              - TransitionInDays: 365
                StorageClass: DEEP_ARCHIVE

  LoadBalancerBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LoadBalancerBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:ReplicateObject'
              - 's3:ReplicateDelete'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${LoadBalancerBucket}/*'
            Principal: '*'
            Condition: 
              StringEquals: 
                "aws:PrincipalOrgID": !Ref OrgId
              ArnLike:
                "aws:PrincipalArn": !Sub "arn:aws:iam::*:role/${SourceAccountRoleName}"
          - Action:
              - 's3:List*'
              - 's3:GetBucketVersioning'
              - 's3:PutBucketVersioning'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${LoadBalancerBucket}'
            Principal: '*'
            Condition: 
              StringEquals: 
                "aws:PrincipalOrgID": !Ref OrgId
              ArnLike:
                "aws:PrincipalArn": !Sub "arn:aws:iam::*:role/${SourceAccountRoleName}"

  LoadBalancerAccessBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      BucketName: !Sub 'load-balancer-s3-access-logs-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationAndGlacierRule
            Status: Enabled
            ExpirationInDays: 3650
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
              - TransitionInDays: 365
                StorageClass: DEEP_ARCHIVE

                  
  ########################################################################
  # CloudFront logs
  ########################################################################

  CloudFrontBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      BucketName: !Sub 'cloudfront-logs-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref CloudFrontAccessBucket
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationAndGlacierRule
            Status: Enabled
            ExpirationInDays: 3650
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
              - TransitionInDays: 365
                StorageClass: DEEP_ARCHIVE

  CloudFrontBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudFrontBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:ReplicateObject'
              - 's3:ReplicateDelete'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${CloudFrontBucket}/*'
            Principal: '*'
            Condition: 
              StringEquals: 
                "aws:PrincipalOrgID": !Ref OrgId
              ArnLike:
                "aws:PrincipalArn": !Sub "arn:aws:iam::*:role/${SourceAccountRoleName}"
          - Action:
              - 's3:List*'
              - 's3:GetBucketVersioning'
              - 's3:PutBucketVersioning'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${CloudFrontBucket}'
            Principal: '*'
            Condition: 
              StringEquals: 
                "aws:PrincipalOrgID": !Ref OrgId
              ArnLike:
                "aws:PrincipalArn": !Sub "arn:aws:iam::*:role/${SourceAccountRoleName}"

  CloudFrontAccessBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      BucketName: !Sub 'cloudfront-s3-access-logs-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationAndGlacierRule
            Status: Enabled
            ExpirationInDays: 3650
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
              - TransitionInDays: 365
                StorageClass: DEEP_ARCHIVE

